pipeline {
  agent any

  triggers {
    GenericTrigger(
     genericVariables: [
      [key: 'ref', value: '$.pull_request.head.ref']
      [key: 'repo', value: '$.pull_request.head.ssh_url']
     ],
     causeString: 'Triggered on $ref',
     token: 'project-name',
     printContributedVariables: true,
     printPostContent: true,
     silentResponse: false,
     regexpFilterText: '$ref',
     regexpFilterExpression: ''
    )
  }

  stages {
    stage('Preparing source...') {
      steps {
            git branch: '$ref',
            credentialsId: 'tricao',
            url: '$repo'
      }
    }

    stage('Testing') {
      steps {
        script {
          try {
            telegramSend "üòÇ Testing..."
            nodejs(nodeJSInstallationName: 'nodejs') {
              sh 'npm install --only=dev'
              sh 'npm test'
            }
            telegramSend "üëçTest Success ${ref}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n${env.BUILD_URL}"
          } catch(e) {
            // mark build as failed
            currentBuild.result = "FAILURE";

            // send slack notification
            telegramSend "üí© Test Failed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n${env.BUILD_URL}\nError: ${e}"

            // throw the error
            throw e;
          }
        }
      }
    }
  }
}