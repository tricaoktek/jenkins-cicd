pipeline {
  agent any

  triggers {
    GenericTrigger(
     genericVariables: [
      [key: 'action', value: '$.action'],
      [key: 'ref', value: '$.pull_request.head.ref'],
      [key: 'base_ref', value: '$.pull_request.base.ref'],
      [key: 'main_repo', value: '$.pull_request.head.repo.ssh_url', expressionType: 'JSONPath'],
      [key: 'repo_name', value: '$.pull_request.head.repo.name', expressionType: 'JSONPath']
     ],
     causeString: 'Triggered on $ref',
     token: 'project-name-develop',
     printContributedVariables: true,
     printPostContent: true,
     silentResponse: false,
     regexpFilterText: '$action',
     regexpFilterExpression: 'opened'
    )
  }

  stages {
    stage('Preparing source...') {
      steps {
        script {
          try {
            git branch: '$base_ref',
                credentialsId: 'tricao',
                url: '$main_repo'

            sh 'git merge origin/$ref'
          } catch (e) {
            // mark build as failed
            currentBuild.result = "FAILURE";

            // send slack notification
            telegramSend "üí© ${repo_name} - ${base_ref} => Merge ${ref} to ${base_ref} failed: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n${env.BUILD_URL}\nError: ${e}"

            // throw the error
            throw e;
          }
        }
      }
    }

    stage('Testing') {
      steps {
        script {
          try {
            telegramSend "üòÇ Testing ${repo_name} - ${base_ref}..."
            nodejs(nodeJSInstallationName: 'nodejs') {
              sh 'npm install --only=dev'
              sh 'npm test'
            }
            telegramSend "üëç Test Success ${repo_name} - ${base_ref}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n${env.BUILD_URL}"
          } catch(e) {
            // mark build as failed
            currentBuild.result = "FAILURE";

            // send slack notification
            telegramSend "üí© Test Failed ${repo_name} - ${base_ref}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n${env.BUILD_URL}\nError: ${e}"

            // throw the error
            throw e;
          }
        }
      }
    }

    stage('Pushing to origin...') {
      steps {
        script {
          try {
            sshagent(['tricao']) {
              sh 'git diff-index --quiet HEAD || git commit -am "Merge ${ref} to ${base_ref}"'
              sh "git push origin ${base_ref}"
            }
            telegramSend "üëç Push Commit Success ${repo_name} - ${base_ref}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n${env.BUILD_URL}"
          } catch (e) {
            // mark build as failed
            currentBuild.result = "FAILURE";

            // send slack notification
            telegramSend "üí© Push Commit Failed ${repo_name} - ${base_ref}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n${env.BUILD_URL}\nError: ${e}"

            // throw the error
            throw e;
          }
        }
      }
    }

    stage('Building') {
      steps {
        script {
          try {
            telegramSend "üòÇ Building ${repo_name} - ${base_ref}..."
            telegramSend "üëç Build Success ${repo_name} - ${base_ref}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n${env.BUILD_URL}"
          } catch (e) {
            // mark build as failed
            currentBuild.result = "FAILURE";

            // send slack notification
            telegramSend "üí© Build Failed ${repo_name} - ${base_ref}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n${env.BUILD_URL}\nError: ${e}"

            // throw the error
            throw e;
          }
        }
      }
    }

    stage('Merge staging...') {
      steps {
        script {
          try {
            telegramSend "üòÇ ${repo_name} - Merging ${base_ref} to staging..."
            sshagent(['tricao']) {
              sh 'git checkout staging'
              sh 'git pull'
              sh 'git merge develop'
              sh "git push origin staging"
            }
            telegramSend "üëç Merge Success ${repo_name} - Merge ${base_ref} to staging: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n${env.BUILD_URL}"
          } catch (e) {
            // mark build as failed
            currentBuild.result = "FAILURE";

            // send slack notification
            telegramSend "üí© ${repo_name} - Merge ${base_ref} to staging Failed ${repo_name} - ${base_ref}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'\n${env.BUILD_URL}\nError: ${e}"

            // throw the error
            throw e;
          }
        }
      }
    }
  }
}