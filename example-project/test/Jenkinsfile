pipeline {
  agent any

  stages {
    stage('Preparing source...') {
      steps {
        sh "echo ${ghprbTargetBranch}"
        sh "echo ${ghprbSourceBranch}"

        script {
          try {
            git branch: '$ghprbTargetBranch',
                credentialsId: 'tricao',
                url: 'git@github.com:tricaoktek/docker-demo.git'

            sh 'git merge origin/$ghprbSourceBranch'
          } catch (e) {
            // mark build as failed
            currentBuild.result = "FAILURE";

            // throw the error
            throw e;
          }
        }
      }
    }

    stage('Testing') {
      steps {
        script {
          try {
            nodejs(nodeJSInstallationName: 'nodejs') {
              sh 'npm install --only=dev'
              sh 'npm test'
            }
          } catch(e) {
            // mark build as failed
            currentBuild.result = "FAILURE";

            // throw the error
            throw e;
          }
        }
      }
    }
  }

  post {
    always {
      deleteDir() // Recursively delete the current directory from the workspace
    }
  }
}
